
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.TransferHandler;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sambasu
 */
public class fill4 extends javax.swing.JFrame {
/*
    private int altX;
    private int altY;
    private int mouseX;
    private int mouseY;
    private boolean dragging;
    */
    /**
     * Creates new form fill4
     */
    public fill4() {
        initComponents();
        //this.dragging = false;
     
        //cup with ice and milk
        ImageIcon myimage1 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/imgs/sCupIce.png")));
        
        Image c1 =myimage1.getImage();
        Image c2 = c1.getScaledInstance(cup.getWidth(),cup.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon i = new ImageIcon(c2);
        
        cup.setIcon(i);
        
        //tapioca
        ImageIcon myimage2 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/imgs/spoon-boba.png")));
        
        Image t1 =myimage2.getImage();
        Image t2 = t1.getScaledInstance(tap.getWidth(),tap.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon i2 = new ImageIcon(t2);
        
        tap.setIcon(i2);
        
        
        
        //hearts
        ImageIcon myimage3 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/imgs/spoon-heart.png")));
        
        Image h1 =myimage3.getImage();
        Image h2 = h1.getScaledInstance(heart.getWidth(),heart.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon i3 = new ImageIcon(h2);
        
        heart.setIcon(i3);
        
        //stars
        ImageIcon myimage4 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/imgs/spoon-star.png")));
        
        Image s1 =myimage4.getImage();
        Image s2 = s1.getScaledInstance(star.getWidth(),star.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon i4 = new ImageIcon(h2);
        
        star.setIcon(i4);
        
        //pluses
        ImageIcon myimage5 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/imgs/spoon-X.png")));
        
        Image p1 =myimage5.getImage();
        Image p2 = p1.getScaledInstance(plus.getWidth(),plus.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon i5 = new ImageIcon(p2);
        
        plus.setIcon(i5);
    }
    
    

    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        cup = new javax.swing.JLabel();
        tap = new javax.swing.JLabel();
        star = new javax.swing.JLabel();
        heart = new javax.swing.JLabel();
        plus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        jButton1.setText("Next");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        jButton2.setText("Order Station");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tap.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                tapMouseDragged(evt);
            }
        });
        tap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tapMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tapMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tapMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(heart, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(plus, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cup, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tap, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(star, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(91, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(tap, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(star, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(5, 5, 5))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(heart, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(54, 54, 54)
                            .addComponent(plus, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(cup, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        new MainJFrame().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new evaluation().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tapMouseClicked
        // TODO add your handling code here:
        
        ImageIcon myimage2 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/imgs/bigBoba.png")));
        ImageIcon myimage3 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/imgs/spoon-heart.png")));
        ImageIcon myimage4 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/imgs/spoon-star.png")));
        ImageIcon myimage5 = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/imgs/spoon-X.png")));
        
        //tapioca
        Image t1 =myimage2.getImage();
        Image t2 = t1.getScaledInstance(tap.getWidth(),tap.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon i2 = new ImageIcon(t2);
        
        tap.setIcon(i2);
        
        //hearts
        Image t2 =myimage3.getImage();
        Image t3 = t2.getScaledInstance(tap.getWidth(),tap.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon i3 = new ImageIcon(t2);
        
        tap.setIcon(i3);
        
        //stars
        Image t3 =myimage4.getImage();
        Image t4 = t3.getScaledInstance(tap.getWidth(),tap.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon i4 = new ImageIcon(t2);
        
        tap.setIcon(i4);
        
        //pluses
        Image t4 =myimage5.getImage();
        Image t5 = t4.getScaledInstance(tap.getWidth(),tap.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon i5 = new ImageIcon(t2);
        
        tap.setIcon(i5);
        
        
        try {
            Thread.sleep(1000);
            
            /*
            tap.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent evt) {
            JComponent comp = (JComponent) evt.getSource();
            TransferHandler th = comp.getTransferHandler();
            
            th.exportAsDrag(comp, evt, TransferHandler.COPY);
            }
            }); */
        } catch (InterruptedException ex) {
            Logger.getLogger(fill4.class.getName()).log(Level.SEVERE, null, ex);
        }
        tap.setLocation(270, 70);
    }//GEN-LAST:event_tapMouseClicked
    
    private void tapMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tapMouseDragged
        // TODO add your handling code here:
       /*
        Point p = evt.getPoint();
       if (dragging) {
           tap.setAlignmentX(altX + ((int)p.getX() - mouseX));
           tap.setAlignmentY(altY + ((int)p.getY() - mouseY));
        }
        */
        /*
        var c = (JComponent) evt.getSource();
            var handler = c.getTransferHandler();
            handler.exportAsDrag(c, evt, TransferHandler.COPY);*/
            /*
        JComponent comp = (JComponent) evt.getSource();
        TransferHandler th = comp.getTransferHandler();

        th.exportAsDrag(comp, evt, TransferHandler.COPY);*/
    }//GEN-LAST:event_tapMouseDragged

    private void tapMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tapMousePressed
        // TODO add your handling code here:
        /*Point p = evt.getPoint();
        
                dragging = true;
                mouseX = (int) p.getX();
                mouseY = (int) p.getY();
                altX = (int) tap.getAlignmentX();
                altY = (int) tap.getAlignmentX();
                System.out.println(mouseX + mouseY);
        */
    }//GEN-LAST:event_tapMousePressed

    private void tapMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tapMouseReleased
        // TODO add your handling code here:
        //dragging = false;
    }//GEN-LAST:event_tapMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fill4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fill4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fill4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fill4.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new fill4().setVisible(true);
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cup;
    private javax.swing.JLabel heart;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel plus;
    private javax.swing.JLabel star;
    private javax.swing.JLabel tap;
    // End of variables declaration//GEN-END:variables
}
